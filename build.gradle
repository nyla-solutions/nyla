apply plugin: 'signing'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


sourceCompatibility = 17 
version = '2.0.0'


allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

compileJava   {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}


artifacts { archives sourcesJar, javadocJar }

signing {
    sign(publishing.publications)
}

group = "com.github.nyla-solutions"
archivesBaseName = "nyla.solutions.core"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'


}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'Nyla Core',
                'Premain-Class': 'nyla.solutions.core.patterns.reflection.ObjectClassSizer',
                'Can-Redefine-Classes': false,
                'Can-Set-Native-Method-Prefix': false
        )
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            pom {
                name = 'nyla.solutions.core'
                groupId = group
                artifactId = 'nyla.solutions.core'
                description = 'This Java API provides support for application utilities (application configuration, data encryption, debugger, text processing, and more).'
                packaging = 'jar'
                url = 'https://github.com/nyla-solutions/nyla'
                licenses {
                    license {
                        url = 'https://github.com/nyla-solutions/nyla/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'ggreen'
                        name = 'Gregory Green'
                        email = 'ggreen@g-solutions.net'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/nyla-solutions/nyla.git'
                    developerConnection = 'scm:git:https://github.com/nyla-solutions/nyla.git'
                    url = 'https://github.com/nyla-solutions/nyla.git'
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }

    repositories {
        maven {
            name = "CentralMaven" //  optional target repository name
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}
