apply plugin: 'signing'
apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'maven'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.9"
    }
}


sourceCompatibility = 1.8
version = '1.4.5-SNAPSHOT'


allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

//javadoc {
//    source = sourceSets.main.allJava
//    classpath = configurations.compile
//}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}


artifacts { archives sourcesJar, javadocJar }

signing {
    sign configurations.archives
}

group = "com.github.nyla-solutions"
archivesBaseName = "nyla.solutions.core"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'


}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'Nyla Core',
                'Premain-Class': 'nyla.solutions.core.patterns.reflection.ObjectClassSizer',
                'Can-Redefine-Classes': false,
                'Can-Set-Native-Method-Prefix': false
        )
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = archivesBaseName
            version = version

            from components.java
        }
    }
}


//uploadArchives {
//
//    signing {
//        sign(publishing.publications["mavenJava"])
//    }
//
//    repositories {
//        mavenDeployer {
////            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//
//            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            pom.project {
//                name 'Nyla Core'
//                packaging 'jar'
//                // optionally artifactId can be defined here
//                description 'Core utility features.'
//                url 'https://github.com/nyla-solutions/nyla/tree/master/nyla.solutions.core'
//
//                scm {
//                    url 'https://github.com/nyla-solutions/nyla.git'
//                }
//
//
//                licenses {
//                    license {
//                        name 'The Apache License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//
//                developers {
//                    developer {
//                        id 'ggreen'
//                        name 'Gregory Green'
//                        email 'ggreen@g-solutions.net'
//                    }
//                }
//            }
//        }
//    }
//}
	
