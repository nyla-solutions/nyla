/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ggreen' at '1/14/17 9:42 AM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins {
	id 'java-library'
	id 'maven-publish'
	id 'signing'
}


java {
	withJavadocJar()
	withSourcesJar()
	sourceCompatibility = '17'
}

version = '2.2.4'


allprojects {
	tasks.withType(Javadoc) {
		options.addStringOption('Xdoclint:none', '-quiet')
	}
}


group = "com.github.nyla-solutions"
archivesBaseName = "nyla.solutions.xml"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
	implementation project(':projects:core')
	implementation 'com.google.code.gson:gson:2.3.1'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
	implementation 'com.thoughtworks.xstream:xstream:1.4.7'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'
	implementation group:  'dom4j', name: 'dom4j', version: '1.6'
	implementation 'org.jsoup:jsoup:1.8.1'
	implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
	testImplementation 'org.mockito:mockito-core:5.10.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.2'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'com.h2database:h2:2.1.214'
}

test {
	useJUnitPlatform()
	afterTest { descriptor, result ->
		println "\n$descriptor.className [$descriptor.classDisplayName] > $descriptor.name [$descriptor.displayName]: $result.resultType"
	}
}


publishing {
	publications {
		mavenJava(MavenPublication) {
			pom {
				name = 'nyla.solutions.xml'
				groupId = group
				artifactId = 'nyla.solutions.xml'
				description = 'This Java API provides support for application utilities (application configuration, data encryption, debugger, text processing, and more).'
				from components.java
				versionMapping {
					usage('java-api') {
						fromResolutionOf('runtimeClasspath')
					}
					usage('java-runtime') {
						fromResolutionResult()
					}
				}
				url = 'https://github.com/nyla-solutions/nyla'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'ggreen'
						name = 'Gregory Green'
						email = 'ggreen@g-solutions.net'
					}
				}
				scm {
					connection = 'scm:git:https://github.com/nyla-solutions/nyla/tree/master/nyla.solutions.json'
					developerConnection = 'scm:git:https://github.com/nyla-solutions/nyla/tree/master/nyla.solutions.json'
					url = 'https://github.com/nyla-solutions/nyla/tree/master/nyla.solutions.json'
				}
			}
		}
	}

	repositories {
		maven {
			name = "CentralMaven" //  optional target repository name
			url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			credentials {
				username = ossrhUsername
				password = ossrhPassword
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}

javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}


